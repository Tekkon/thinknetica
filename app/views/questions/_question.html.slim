- if question.persisted?
  div id="question-#{question.id}"
    p
      = question.title
      br
      = question.body
      br

      div id="question-#{question.id}-vote"
        - if user_signed_in?
          - if !current_user.author_of?(question) && question.vote(current_user).nil?
            = label "vote_question_#{question.id}", 'Vote for'
            = radio_button 'rb', "vote_question_#{question.id}", "1", class: 'rb-vote', data: { remote: true, method: :post,
                    url: votes_path({ votable_id: question.id, votable_type: 'Question', vote_type: '1'}) }
            br
            = label "vote_question_#{question.id}", 'Vote against'
            = radio_button 'rb', "vote_question_#{question.id}", "0", class: 'rb-vote', data: { remote: true, method: :post,
                    url: votes_path({ votable_id: question.id, votable_type: 'Question', vote_type: '-1'}) }

      div id="question-#{question.id}-vote-result"
        - unless question.vote(current_user).nil?
          = question.vote_description(current_user)

    - if user_signed_in? && current_user.author_of?(question)
      = link_to 'Edit', '', class: 'edit-question-link', data: {question_id: question.id}
      br
      = link_to 'Delete', question_path(question), method: :delete
      br

      = form_for question, remote: true, html: {id: "edit-question-#{question.id}"} do |f|
        div id="question-#{question.id}-errors"
          = render "shared/error_messages", target: question
        = f.label :title
        = f.text_field :title
        br
        = f.label :body, "Question"
        = f.text_area :body
        br
        = f.submit 'Save'
